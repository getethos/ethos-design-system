name: Deploy Styleguide

on:
  push:
    # branches:
    #   - master

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          # Don't share with other workflows because we are using `--production=false`
          key: dev-dependencies-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install --production=false
      - name: Write .aws/config
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/.aws
          cat > ${GITHUB_WORKSPACE}/.aws/config <<EOF
          [profile ci-user]
          role_arn = ${{ secrets.AWS_CI_USER_ROLE_ARN }}
          credential_source = Environment
          region = us-east-1
          EOF
          cat ${GITHUB_WORKSPACE}/.aws/config

      - name: Download fonts from S3
        run: aws s3 cp s3://eds.ethoslabs.io/fonts.zip ${GITHUB_WORKSPACE}/fonts.zip --profile ci-user
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_CONFIG_FILE: ${GITHUB_WORKSPACE}/.aws/config
      - name: Unzip fonts
        run: unzip -o ${GITHUB_WORKSPACE}/fonts.zip -d ${GITHUB_WORKSPACE}/src/
      - name: Build styleguide
        run: yarn styleguide:build
      - name: Sync styleguide to S3
        run: aws s3 sync ${GITHUB_WORKSPACE}/styleguide s3://eds.ethoslabs.io/ --delete --exclude "fonts.zip" --profile ci-user
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ROLE_ARN: ${{ secrets.AWS_CI_USER_ROLE_ARN }}
          AWS_CONFIG_FILE: ${GITHUB_WORKSPACE}/.aws/config
      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*" --profile ci-user
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ROLE_ARN: ${{ secrets.AWS_CI_USER_ROLE_ARN }}
          AWS_CONFIG_FILE: ${GITHUB_WORKSPACE}/.aws/config
          CLOUDFRONT_DISTRIBUTION_ID: EFXVH59BN2ASQ
