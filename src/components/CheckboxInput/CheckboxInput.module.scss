.root {
  display: flex;
  align-items: flex-start;
}

.root2 {
  display: flex;
  align-items: stretch;
  min-height: var(--Space-56);
}

.label {
  flex: 1;
  display: flex;
  align-items: center;
  border: 1px solid rgba(0, 0, 0, 0.24);
  border-radius: 2px;
  cursor: pointer;
  transition: border-color background-color color 250ms ease;
  padding: 0px 16px;
}
.label input {
  cursor: inherit;
}
.CheckboxWrapper [data-disabled='true'] * {
  cursor: default;
}
.label > *:nth-child(2) {
  padding: 17px 0px 13px 0px;
}
.CheckboxWrapper [data-variant='textonly'][data-checked='true'] .label {
  background-color: var(--BrandForest);
  color: var(--White);
}

.CheckboxWrapper [data-checked='true'] label,
.CheckboxWrapper [data-checked='true'] .tooltip,
.CheckboxWrapper label:focus-within,
.CheckboxWrapper label:focus-within ~ .tooltip {
  border-color: var(--BrandForest);
}

.CheckboxWrapper [data-error='true'] label,
.CheckboxWrapper [data-error='true'] .tooltip,
.CheckboxWrapper [data-error='true'] label ~ .tooltip {
  border-color: var(--BrandSunburn);
}

.labelWithTooltip {
  border-radius: 2px 0px 0px 2px;
  border-right-width: 0px;
}

.checkboxWrapper {
  display: inline-block;
  position: relative;
  top: 1px;
  margin-right: 19px;
}

.checkboxWrapper2 {
  display: inline-block;
  position: relative;
  padding-right: var(--Space-16);
}
.CheckboxWrapper [data-variant='textonly'] .checkboxWrapper2 {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

.Facade {
  display: flex;
  align-items: center;
  justify-content: center;
  outline: 0;
  transition: border-color 250ms ease;
  width: 18px;
  height: 18px;
  overflow: hidden;
}

.FacadeBorder {
  border-color: var(--GrayStrokeAndDisabled--translucent);
  border-style: solid;
  border-width: 1px;
}

.FacadeWhiteBackground {
  background-color: white;
}

.FacadeDefaultBackground {
  background-color: transparent;
}

.CheckboxInput {
  position: absolute;
  opacity: 0;
}

/* State */
.CheckboxInput:not(:checked) ~ .Facade {
  &:hover {
    background-color: var(--GrayLightHover--translucent);
  }
}

.CheckboxInput:checked ~ .Facade {
  background-color: var(--BrandForest);
  border-width: 0px;
  opacity: 1;
  fill: var(--white);
}

/**
 * Hackâ€”this ensures that our Errors.module.scss does not get overriden by this rule
 * (normal focus causes dark gray, while the error still results in red border)
 */
.CheckboxInput:focus ~ .Facade:not(:global(.FacadeError)) {
  border-color: var(--GrayPrimary--opaque);
}

.tooltip,
.tooltip * {
  display: flex;
  transition: border-color 250ms ease;
}

.tooltip {
  background: #f5f5f5;
  border-top-width: 1px;
  border-right-width: 1px;
  border-bottom-width: 1px;
  border-left-width: 0px;
  border-color: #c2c2c2;
  border-style: solid;
  border-radius: 0px 2px 2px 0px;
}

.tooltipBody {
  display: flex;
  align-items: center;
  padding: 8px;
  border-left: 1px solid #c2c2c2;
}
[data-variant='textonly'][data-checked='true'] .tooltipBody {
  border-left-color: var(--BrandForest);
}

.popper {
  border-radius: 2px;
  background-color: var(--GrayPrimary--opaque);
  color: var(--White);
  left: var(--Space-4) !important;

  ::before {
    border-color: transparent var(--GrayPrimary--opaque) transparent transparent !important;
  }
}

.infoIcon {
  display: block;
  width: var(--Space-16);
  height: var(--Space-16);
}
