// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select adding a title prop adds a div and aria-label 1`] = `
<div
  className="wrapper"
  data-tid="my-select"
>
  <div
    className="foo Compact root css-2b097c-container"
    onKeyDown={[Function]}
  >
    <div
      className="StyledReactSelect__control css-yk16xz-control"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="StyledReactSelect__value-container css-1hwfws3"
      >
        <div
          className="StyledReactSelect__placeholder css-1wa3eu0-placeholder"
        >
          Type to search
        </div>
        <div
          className="css-b8ldur-Input"
        >
          <div
            className="StyledReactSelect__input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label="Hello World"
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              disabled={false}
              id="react-select-3-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "label": "input",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="StyledReactSelect__indicators css-1hb7zxy-IndicatorsContainer"
      >
        <span
          className="StyledReactSelect__indicator-separator css-1okebmr-indicatorSeparator"
        />
        <div
          aria-hidden="true"
          className="StyledReactSelect__indicator StyledReactSelect__dropdown-indicator css-tlfecz-indicatorContainer"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-6q0nyr-Svg"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <div
    className="title"
  >
    Hello World
  </div>
  
</div>
`;

exports[`Select matches snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class=""
        data-tid="my-select"
      >
        <div
          class="foo Compact root css-2b097c-container"
        >
          <div
            class="StyledReactSelect__control css-yk16xz-control"
          >
            <div
              class="StyledReactSelect__value-container css-1hwfws3"
            >
              <div
                class="StyledReactSelect__placeholder css-1wa3eu0-placeholder"
              >
                Type to search
              </div>
              <div
                class="css-b8ldur-Input"
              >
                <div
                  class="StyledReactSelect__input"
                  style="display: inline-block;"
                >
                  <input
                    aria-autocomplete="list"
                    autocapitalize="none"
                    autocomplete="off"
                    autocorrect="off"
                    id="react-select-2-input"
                    spellcheck="false"
                    style="box-sizing: content-box; width: 2px; border: 0px; font-size: inherit; opacity: 1; outline: 0; padding: 0px;"
                    tabindex="0"
                    type="text"
                    value=""
                  />
                  <div
                    style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-size: inherit; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                  />
                </div>
              </div>
            </div>
            <div
              class="StyledReactSelect__indicators css-1hb7zxy-IndicatorsContainer"
            >
              <span
                class="StyledReactSelect__indicator-separator css-1okebmr-indicatorSeparator"
              />
              <div
                aria-hidden="true"
                class="StyledReactSelect__indicator StyledReactSelect__dropdown-indicator css-tlfecz-indicatorContainer"
              >
                <svg
                  aria-hidden="true"
                  class="css-6q0nyr-Svg"
                  focusable="false"
                  height="20"
                  viewBox="0 0 20 20"
                  width="20"
                >
                  <path
                    d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                  />
                </svg>
              </div>
            </div>
          </div>
        </div>
        
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class=""
      data-tid="my-select"
    >
      <div
        class="foo Compact root css-2b097c-container"
      >
        <div
          class="StyledReactSelect__control css-yk16xz-control"
        >
          <div
            class="StyledReactSelect__value-container css-1hwfws3"
          >
            <div
              class="StyledReactSelect__placeholder css-1wa3eu0-placeholder"
            >
              Type to search
            </div>
            <div
              class="css-b8ldur-Input"
            >
              <div
                class="StyledReactSelect__input"
                style="display: inline-block;"
              >
                <input
                  aria-autocomplete="list"
                  autocapitalize="none"
                  autocomplete="off"
                  autocorrect="off"
                  id="react-select-2-input"
                  spellcheck="false"
                  style="box-sizing: content-box; width: 2px; border: 0px; font-size: inherit; opacity: 1; outline: 0; padding: 0px;"
                  tabindex="0"
                  type="text"
                  value=""
                />
                <div
                  style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-size: inherit; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                />
              </div>
            </div>
          </div>
          <div
            class="StyledReactSelect__indicators css-1hb7zxy-IndicatorsContainer"
          >
            <span
              class="StyledReactSelect__indicator-separator css-1okebmr-indicatorSeparator"
            />
            <div
              aria-hidden="true"
              class="StyledReactSelect__indicator StyledReactSelect__dropdown-indicator css-tlfecz-indicatorContainer"
            >
              <svg
                aria-hidden="true"
                class="css-6q0nyr-Svg"
                focusable="false"
                height="20"
                viewBox="0 0 20 20"
                width="20"
              >
                <path
                  d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
      
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
